/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };
&mt {
  flavor = "tap-preferred";
  tapping_term_ms = <200>;
};

/ {
       behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
            td: tapdance {
                compatible = "zmk,behavior-hold-tap";
                label = "TAPDANCE";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };
     keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &trans &kp MINUS &kp Q &kp W       &kp E        &kp R           &kp T                            &kp Y       &kp U          &kp I       &kp O      &kp P    &kp LBKT       &kp RBKT
          &kp EQUAL &kp A &hm LALT S  &hm LCTRL D  &hm LMETA F     &kp G                            &kp H       &hm RMETA J    &hm RCTRL K &hm RALT L &kp SEMI &kp SQT
          &kp GRAVE &kp Z &kp X       &kp C        &kp V           &kp B                            &kp N       &kp M          &kp COMMA   &kp DOT    &kp FSLH &kp BSLH
                                      &lt LWR TAB  &mt LSHFT SPACE &lt LS(LC(LA(LMETA))) RET        &lt RSE ESC &mt RSHFT BSPC &lt LWR DEL
                        >;
                };
                lower_layer {
                        bindings = <
   &trans &kp UNDER      &kp F1   &kp F2 &kp F3   &kp F4   &kp F5                        &kp F6      &kp F7   &kp F8   &kp F9   &kp F10  &kp F11 &mt RGUI F12
          &mt LCTRL PLUS &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                     &kp CARET   &kp AMPS &kp STAR &kp LPAR &kp RPAR &mt RCTRL MINUS
          &mt LALT EQUAL &kp N1   &kp N2 &kp N3   &kp N4   &kp N5                        &kp N6      &kp N7   &kp N8   &kp N9   &kp N0   &trans
                                         &trans   &trans   &lt LS(LC(LA(LMETA))) RET     &lt ADJ ESC &trans   &trans
                        >;
                };

                raise_layer {
                        bindings = <
   &trans &kp KP_NUM      &kp KP_SLASH    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS        &kp C_VOL_UP &kp HOME &kp PSCRN &kp PG_UP &kp SLCK &kp CAPS &trans
          &mt LCTRL EQUAL &kp KP_MULTIPLY &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS         &kp C_MUTE   &kp LEFT &kp UP    &kp RIGHT &kp INS  &mt RCTRL K_APP
          &trans          &kp KP_N0       &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_DOT          &kp C_VOL_DN &kp END  &kp DOWN  &kp PG_DN &kp PAUSE_BREAK &trans
                                                    &trans     &trans   &lt ADJ RET         &trans       &trans   &lt ADJ DEL
                        >;
                };
                adjust_layer {
                        bindings = <
   &reset &bootloader  &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &bootloader &reset
          &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
          &none        &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &none
                                                                    &trans &none &none       &trans &none &trans
                        >;
                };
        };
};
